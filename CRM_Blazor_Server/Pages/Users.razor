@page "/users"

@using CRM_Model_Library
@using CRM_Blazor_Server.ViewModels

@inject IUserData _db

<h3>User Page</h3>

<h4>Insert New Person</h4>
<EditForm Model="@newUser" OnValidSubmit="@InsertUser">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <InputText id="firstname" @bind-Value="newUser.FirstName" />
    <InputText id="lastname" @bind-Value="newUser.LastName" />
    <InputText id="email" @bind-Value="newUser.Email" />
    <InputText id="password" @bind-Value="newUser.Password" />

    <button type="submit" class="btn btn-primary">Submit</button>
</EditForm>

<h4>Current Users</h4>
@if (users is null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thread>
            <tr>
                <th scope="col">First Name</th>
                <th scope="col">Last Name</th>
                <th scope="col">Email</th>
            </tr>
        </thread>
        <tbody>
            @foreach (var user in users)
            {
                <tr>
                    <td>@user.FirstName</td>
                    <td>@user.LastName</td>
                    <td>@user.Email</td>
                </tr>
            }
        </tbody>
    </table>
}


@code {
    private List<UserModel> users;
    private DisplayUserModel newUser = new DisplayUserModel();

    protected override async Task OnInitializedAsync()
    {
        users = await _db.GetUsers();
    }

    private async Task InsertUser()
    {
        UserModel u = new UserModel
        {
            FirstName = newUser.FirstName,
            LastName = newUser.LastName,
            Email = newUser.Email,
            Password = newUser.Password
        };

        await _db.InsertUser(u);

        users.Add(u);

        newUser = new DisplayUserModel();
    }
}
