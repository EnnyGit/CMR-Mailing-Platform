@page "/update_campaign/{Id}"

@using CRM_Model_Library
@using MailChimp.Net;
@using CRM_Blazor_Server.ViewModels

@inject IMailChimpController _controller
@inject IMailChimpListController _listController
@inject IMailChimpTemplateController _templateController

@if (campaign is null || newCampaign is null)
{
    <p><em>Loading...</em></p>
}
else
{
    <h3>Edit @campaign.Settings.Title</h3>
    <EditForm Model="newCampaign" OnValidSubmit="AddOrUpdateCampaign">
        <DataAnnotationsValidator />
        <div class="form-group">
            <lable>Campaign Title</lable>
            <InputText class="form-control" @bind-Value="@newCampaign.Title"></InputText>
        </div>
        <div class="form-group">
            <lable>Subject</lable>
            <InputText class="form-control" @bind-Value="@newCampaign.Subject"></InputText>
        </div>
        <div class="form-group">
            <lable>PreviewText</lable>
            <InputText class="form-control" @bind-Value="@newCampaign.PreviewText"></InputText>
        </div>
        <div class="form-group">
            <lable>From Name</lable>
            <InputText class="form-control" @bind-Value="@newCampaign.FromName"></InputText>
        </div>
        <div class="form-group">
            <lable>From Email</lable>
            <InputText class="form-control" @bind-Value="@newCampaign.FromEmail"></InputText>
        </div>
        <div />
        <ValidationSummary />
        <div class="form-group">
            <lable>Choose Template: </lable>

            <select class="btn btn-secondary dropdown-toggle" name="template" id="template" @bind="templateId">
                <option value="">Choose Template</option>
                @foreach (var template in templates)
                {
                    <option value="@template.Id">@template.Name</option>
                }

            </select>

            <img src="@GetThumbnail()" style="border:1px solid black;" width="120"
                 height="151">

        </div>
        <div>
            <button type="submit" href="https://us7.admin.mailchimp.com/templates/replicate?id=@templateId" class="btn btn-primary">Edit Template</button>
        </div>
        <div>
            <button type="submit" class="btn btn-primary">Save</button>
            <a class="btn btn-primary" href="#" role="button">Back</a>
        </div>
    </EditForm>
}

@code {
    [Parameter]
    public string Id { get; set; }
    private static MailChimp.Net.Models.Campaign campaign;
    private static DisplayCampaignModel newCampaign = new DisplayCampaignModel();
    private static MailChimp.Net.Models.List memberList;
    private static IEnumerable<MailChimp.Net.Models.Template> templates;

    private int templateId;

    //private async Task AddTemplateToCampaign()
    //{
    //    _co
    //}

    private async Task<string> GetThumbnail()
    {
        var thumbnail = await _templateController.GetThumbnailById(templateId);
        return thumbnail;
    }

    private async Task EditDuplicateTemplate(int templateId)
    {
        var duplicatetemplate = await _templateController.GetTemplateById(templateId);

    }

    protected override async Task OnInitializedAsync()
    {
        templates = await _templateController.GetAllTemplates();
        campaign = await ApiKeyMailChimp.Manager.Campaigns.GetAsync(Id);
        memberList = await _listController.GetDetailOfList(campaign.Recipients.ListId);
        newCampaign.Title = campaign.Settings.Title;
        newCampaign.Subject = campaign.Settings.SubjectLine;
        newCampaign.PreviewText = campaign.Settings.PreviewText;
        newCampaign.FromName = campaign.Settings.FromName;
        if (memberList.CampaignDefaults is null)
        {
            newCampaign.FromEmail = "";
        }
        else
        {
            newCampaign.FromEmail = memberList.CampaignDefaults.FromEmail;
        }
    }

    //protected async Task GetCampaignAudience()
    //{
    //    list = await _listController.GetDetailOfList(campaign.Recipients.ListId);
    //}

    private async Task AddOrUpdateCampaign()
    {
        campaign.Settings.Title = newCampaign.Title;
        campaign.Settings.SubjectLine = newCampaign.Subject;
        campaign.Settings.PreviewText = newCampaign.PreviewText;
        campaign.Settings.FromName = newCampaign.FromName;
        memberList.CampaignDefaults.FromEmail = newCampaign.FromEmail;

        await ApiKeyMailChimp.Manager.Lists.AddOrUpdateAsync(memberList);
        await ApiKeyMailChimp.Manager.Campaigns.AddOrUpdateAsync(campaign);
    }
    //<a class="btn btn-primary" href="email_design" role="button">Choose Template</a>
}
