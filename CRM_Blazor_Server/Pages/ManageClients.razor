@page "/manage/clients"
<div style="align-items:end; float:right;">
    <button type="button" class="btn btn-primary">Create</button>
</div>
<h3>Clients</h3>
<ul class="nav nav-pills nav-justified">
    <li class="nav-item">
        <a class="nav-link" href="manage/contacts">Contacts</a>
    </li>
    <li class="nav-item">
        <a class="nav-link active" href="manage/clients">Clients</a>
    </li>
    
    <li class="nav-item">
        <a class="nav-link" href="manage/lables">lables</a>
    </li>
</ul>
<table class="table">
    <thead>
        <tr>
            <th scope="col">id</th>
            <th scope="col">Name</th>
            <th scope="col">Contacts</th>
            
        </tr>
    </thead>
    <tbody>
        @foreach (var client in Clients)
        {
            <tr>
                <th scope="row">@client.ClientId</th>
                <td>@client.Name</td>
                <td>
                    <ul>
                        @foreach(var contact in GetContactsByClient(client))
                        {
                            <li>@contact.FirstName @contact.LastName</li>
                        }
                    </ul>
                </td>
            </tr>
        }
    </tbody>
</table>
@code {
    List<ContactModel> Contacts = new List<ContactModel>
    {
        new ContactModel
        {
            ModelId = 1,
            FirstName = "Jonas",
            LastName = "de Boer",
            EmailAddress = "jonasdeboer@gmail.com"
        },
        new ContactModel
        {
            ModelId = 2,
            FirstName = "Enny",
            LastName = "Adeoye",
            EmailAddress = "ennyadeaoye@gmail.com"
        },
        new ContactModel
        {
            ModelId = 3,
            FirstName = "Ilias",
            LastName = "el Bouchtaoui",
            EmailAddress = "iliaselbouchtaoui@gmail.com"
        },
        new ContactModel
        {
            ModelId = 4,
            FirstName = "Ali",
            LastName = "Aliawi",
            EmailAddress = "alialiawi@gmail.com"
        },
        new ContactModel
        {
            ModelId = 5,
            FirstName = "Dennis",
            LastName = "Futselaar",
            EmailAddress = "dennisfutselaar@gmail.com"
        }
    };
    List<ClientModel> Clients = new List<ClientModel>
    {
        new ClientModel
        {
            ClientId = 1,
            Name = "Microsoft"
        },
        new ClientModel
        {
            ClientId = 2,
            Name = "Apple"
        },
        new ClientModel
        {
            ClientId = 3,
            Name = "Tesla"
        }

    };
    List<ClientContactLink> CCLinks = new List<ClientContactLink>
    {
        new ClientContactLink
        {
            ClientId = 1,
            ContactId = 5
        },
        new ClientContactLink
        {
            ClientId = 2,
            ContactId = 4
        },
        new ClientContactLink
        {
            ClientId = 3,
            ContactId = 3
        },
        new ClientContactLink
        {
            ClientId = 3,
            ContactId = 2
        },
        new ClientContactLink
        {
            ClientId = 2,
            ContactId = 1
        },
        new ClientContactLink
        {
            ClientId = 1,
            ContactId = 1
        }
    };
    public List<ContactModel> GetContactsByClient(ClientModel client)
    {


        List<ClientContactLink> links = CCLinks.Where(link => link.ClientId == client.ClientId).ToList();
        List<int> contactids = links.Select(link => link.ContactId).ToList();
        List<ContactModel> res = Contacts.Where(contact => contactids.Contains(contact.ModelId)).ToList();

        return res;
    }
}
