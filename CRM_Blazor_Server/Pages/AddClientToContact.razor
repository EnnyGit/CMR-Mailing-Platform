@page "/manage/contacts/viewcontact/{Id}/addclients"

@using CRM_Model_Library
@using CRM_Blazor_Server.ViewModels

@inject IContactData _db
@inject IClientData _db2
@inject IDataAccess _DataAccess
@inject NavigationManager NavigationManager
<div style="float:right">
    @if (Clients == null)
    {
        <p>loading...</p>
    }
    else
    {

        @foreach (var client in Cexcept)
        {
            <input type="checkbox" @onchange="eventArgs => { CheckBoxClicked(client, eventArgs.Value); }" />@client.Name<br />



        }
        <button type="button" class="btn btn-primary" @onclick="SubmitSelected">Submit</button>


    }
</div>
<div>
    @if (Contact != null)
    {
        <h1>@Contact.FirstName @Contact.LastName</h1>
        <br />
        <h4>@Contact.EmailAddress</h4>

    }
    else
    {
        <p>Loading...</p>
    }
    @if (ClientsOfContact != null)
    {
        <h4>Clients:</h4>
        <ul>
            @foreach (var client in ClientsOfContact)
            {

                <li>@client.Name</li>
            }
        </ul>
    }
    <a class="btn btn-primary" href="manage/contacts/viewcontact/@Id.ToString()" role="button">Back</a>
</div>
@code{
    [Parameter]
    public string Id { get; set; }
    private ContactModel Contact;
    private List<ClientModel> ClientsOfContact;
    private List<ClientModel> Clients;
    private List<ClientModel> Selected;
    private List<ClientModel> Cexcept;
    protected override async Task OnInitializedAsync()
    {
        List<ContactModel> rep = await _db.GetContact(Int32.Parse(Id));

        Contact = rep[0];
        ClientsOfContact = await _db.GetClientsOfContact(Contact.ContactId);
        Clients = await _db2.GetClients();
        Selected = new List<ClientModel>();
        AssingCexcept();
    }
    protected List<ClientModel> AssingCexcept()
    {
        List<ClientModel> res = new List<ClientModel>();
        int i = 0;
        List<int> ids = new List<int>();
        ids = ClientsOfContact.Select(x => x.ClientId).ToList();
        while (i < Clients.Count)
        {
            if (!(ids.Contains(Clients[i].ClientId)))
            {
                res.Add(Clients[i]);
            }
            i++;
        }
        Cexcept = res;
        return Cexcept;

    }
    public void CheckBoxClicked(ClientModel client, object checkedvalue)
    {
        if ((bool)checkedvalue)
        {
            if (!Selected.Contains(client))
            {
                Selected.Add(client);
            }
        }
        else
        {
            if (Selected.Contains(client))
            {
                Selected.Remove(client);
            }
        }
    }
    public async Task SubmitSelected()
    {
        foreach (var client in Selected)
        {
            await _db.InsertLink(Contact.ContactId, client.ClientId);
        }
        Selected = new List<ClientModel>();
        NavigationManager.NavigateTo($"manage/contacts/viewcontact/{Id}/addclients");
    }
}